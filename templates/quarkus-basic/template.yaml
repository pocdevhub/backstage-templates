apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: java-quarkus-template
  title: Create a Quarkus App
  description: Create a Quarkus App
  tags:
    - java
    - maven
    - tekton
    - argocd
spec:
  owner: team
  system: microservices
  type: service

  parameters:
    - title: Provide information about the new component
      required:
        - orgName
        - appName
        - domainName
        - repoBranchName
        - groupId
        - javaPackage
        - apiPath
        - namespace
        - description
        - registryUrl
        - clusterDomain
      properties:
        orgName:
          title: Organization name
          type: string
          default: team
        appName:
          title: App name
          type: string
          default: sample-quarkus-app
        domainName:
          title: Name of the domain object
          type: string
          default: Person
        repoBranchName:
          title: Name of the branch in the Git repository
          type: string
          default: master
        groupId:
          title: Maven Group ID
          type: string
          default: com.team.services
        javaPackage:
          title: Java package directory
          type: string
          default: com/team/services
        apiPath:
          title: REST API path
          type: string
          default: /hello
        namespace:
          title: The target namespace on Kubernetes
          type: string
          default: namespace
        description:
          title: Description
          type: string
          default: Quarkus App Generated by Backstage
        registryUrl:
          title: Registry URL
          type: string
          default: default-route-openshift-image-registry.apps.k8s.dev.local:5000
        clusterDomain:
          title: OpenShift Cluster Domain
          type: string
          default: apps.k8s.dev.local
  steps:
    - id: sourceCodeTemplate
      name: Generating the Source Code Component
      action: fetch:template
      input:
        url: ./skeleton
        values:
          orgName: ${{ parameters.orgName }}
          appName: ${{ parameters.appName }}
          domainName: ${{ parameters.domainName }}
          groupId: ${{ parameters.groupId }}
          javaPackage: ${{ parameters.javaPackage }}
          apiPath: ${{ parameters.apiPath }}
          namespace: ${{ parameters.namespace }}

    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.appName }}
        defaultBranch: ${{ parameters.repoBranchName }}
        protectDefaultBranch: false
        repoVisibility: public

    # - id: register
    #   name: Registering the Catalog Info Component
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: /catalog-info.yaml

    # - id: k8sCodeTemplate
    #   name: Generating the K8s Code Component
    #   action: fetch:template
    #   input:
    #     url: ../../skeletons/argocd
    #     values:
    #       orgName: ${{ parameters.orgName }}
    #       appName: ${{ parameters.appName }}
    #       registryUrl: ${{ parameters.registryUrl }}
    #       namespace: ${{ parameters.namespace }}
    #       repoBranchName: ${{ parameters.repoBranchName }}
    #     targetPath: ./gitops

    # - id: publish
    #   name: Publishing to the K8s Code Repository
    #   action: publish:github
    #   input:
    #     allowedHosts: ['github.com']
    #     description: ${{ parameters.description }}
    #     repoUrl: github.com?owner=${{ parameters.orgName }}&repo=k8s-${{ parameters.appName }}
    #     defaultBranch: ${{ parameters.repoBranchName }}
    #     sourcePath: ./gitops
    #     repoVisibility: public

    # - id: create-webhook
    #   name: Create GitHub Webhook
    #   action: github:webhook
    #   input:
    #     repoUrl: github.com?repo=${{ parameters.appName }}&owner=${{ parameters.orgName }}
    #     webhookUrl: http://el-${{ parameters.appName }}-${{ parameters.namespace }}.${{ parameters.clusterDomain }}
    #     contentType: 'json'
        
    # - id: create-argocd-resources
    #   name: Create ArgoCD Resources
    #   action: argocd:create-resources
    #   input:
    #     appName: ${{ parameters.appName }}
    #     argoInstance: pocKToolsInstance
    #     namespace: ${{ parameters.namespace }}
    #     repoUrl: https://github.com/${{ parameters.orgName }}/k8s-${{ parameters.appName }}.git
    #     path: 'manifests'

  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
